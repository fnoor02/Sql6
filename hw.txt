Problem 1 : Game Play Analysis II

WITHOUT WINDOW FUNCTION

SELECT a1.player_id, a1.device_id FROM Activity a1 
WHERE a1.event_date IN (SELECT MIN(a2.event_date) FROM Activity a2 GROUP BY a2.player_id);


WITH WINDOW FUNCTION

WITH CTE AS(
SELECT *, RANK() OVER(PARTITION BY player_id ORDER BY event_date) AS 'rnk' FROM Activity)

SELECT player_id, device_id FROM CTE WHERE rnk = 1;

Problem 2 : Game Play Analysis III


SELECT player_id, event_date, SUM(games_played) OVER(PARTITION BY player_id ORDER BY event_date) AS 'games_played_so_far'
FROM Activity;

Problem 3 : Shortest Distance in a Plane	

SELECT ROUND(SQRT(MIN(POW(p2.x - p1.x,2) + POW((p2.y - p2.x),2))),2) AS 'shortest' 
FROM Points2D p1 INNER JOIN Points2D p2 ON p1.x != p2.x OR p2.y != p1.y;


Problem 4 : Combine Two Tables

SELECT p.firstName, p.lastName, a.city, a.state
FROM Person p LEFT JOIN Address a
ON p.personId = a.personId;

Problem 5 : Customers with Strictly Increasing Purchases

WITH CTE AS(
SELECT customer_id, YEAR(order_date) AS 'year', SUM(price) AS 'sum'
FROM orders GROUP BY customer_id, year)

SELECT c.customer_id FROM CTE c LEFT JOIN CTE c2 
ON c.customer_id = c2.customer_id AND c.year + 1 = c2.year AND c2.sum > c.sum
GROUP BY c.customer_id
HAVING COUNT(*) - COUNT(c2.customer_id) = 1;

